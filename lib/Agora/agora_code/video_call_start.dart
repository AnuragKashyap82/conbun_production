// import 'dart:async';// import 'dart:typed_data';// import 'package:agora_rtc_engine/agora_rtc_engine.dart';// import 'package:cloud_firestore/cloud_firestore.dart';// import 'package:conbun_production/Agora/agora_code/videocall_pojo.dart';// import 'package:conbun_production/Controllers/user_controller.dart';// import 'package:conbun_production/Views/bottomNavScreens/liveScreen/live_screen_apis.dart';// import 'package:conbun_production/Views/session_end_screen.dart';// import 'package:conbun_production/utils/colors.dart';// import 'package:firebase_auth/firebase_auth.dart';// import 'package:flutter_svg/svg.dart';// import 'package:permission_handler/permission_handler.dart';// import 'package:flutter/material.dart';// import 'package:get/get.dart';// import 'package:shimmer_effect/shimmer_effect.dart';// import '../../Views/bottomNavScreens/bottomNavScreen.dart';// import '../../utils/constant.dart';// import '../controllers/individual_chat_controller.dart';// import '../controllers/messageController.dart';//// class VideoCallScreen extends StatefulWidget {//   final String fname;//   final String imageUrl;//   final String userId;//   final bool receivecall;//   final String channelId;//   final String agoratoken;//   final String lname;//   final String appointmentDuration;//   final String appointmentId;//   final bool isLive;//   final String consultantId;//   final String appointmentDate;////   VideoCallScreen(//       {required this.fname,//       required this.imageUrl,//       required this.userId,//       required this.receivecall,//       required this.channelId,//       required this.agoratoken,//       required this.lname,//       required this.appointmentDuration,//       required this.appointmentId,//       required this.isLive,//       required this.consultantId,//       required this.appointmentDate});////   @override//   _VideoCallScreenState createState() => _VideoCallScreenState();// }//// class _VideoCallScreenState extends State<VideoCallScreen> {//   MessageController messageController = Get.put(MessageController());//   LiveScreenApis liveScreenApis = Get.put(LiveScreenApis());//   UserController userController = Get.find();////   ///call duration//   late Timer _callDurationTimer;//   int _callDurationInSeconds = 0;//   late int _streamId;//   FirebaseAuth _auth = FirebaseAuth.instance;////   String get formattedCallDuration {//     // Convert seconds to HH:mm:ss format//     int hours = _callDurationInSeconds ~/ 3600;//     int minutes = (_callDurationInSeconds % 3600) ~/ 60;//     int seconds = _callDurationInSeconds % 60;//     String formattedTime = '';////     if (hours > 0) {//       formattedTime += '$hours:';//     }////     formattedTime +=//     '${minutes.toString().padLeft(2, '0')}:${seconds.toString().padLeft(//         2, '0')}';////     return formattedTime;//   }////   ///Chat services//   final TextEditingController _messageController = TextEditingController();////   void _sendMessage(String message) async {//     if (message.isNotEmpty) {//       await sendMessage(message);//       setState(() {//         messageController.addMessage("Me: ${message}");//         _messageController.clear();//       });//     }//   }////   late StreamSubscription<QuerySnapshot> callStreamSubscription;//   bool isccallstart = false;//   bool _isScreenShared = false;//   bool _isCalldisconnet = false;////   ///jb meeting se sare user left ho jayenge means ab only local user hai////   bool _isMuted = false;//   bool _isFrontCamera = true; // Indicates if the local user is muted//   bool _isCameraOn = true;//   Map<int, bool> remoteUserMuteStates = {};//   Map<int, bool> remoteUserMuteVideoStates = {};////   int uid = 0; // uid of the local user////   int? _remoteUid; // uid of the remote user//   List<int> _remoteUids = [];//   String? liveCallId;//   bool _isJoined = false; // Indicates if the local user has joined the channel//   late RtcEngine agoraEngine; // Agora engine instance//   final GlobalKey<ScaffoldMessengerState> scaffoldMessengerKey =//   GlobalKey<ScaffoldMessengerState>(); // Global key to access the scaffold////   bool isFullScreen = true;//   bool myfullscreen = false;//   bool remotefullscreen = true;////   showMessage(String message) {//     scaffoldMessengerKey.currentState?.showSnackBar(SnackBar(//       content: Text(message),//     ));//   }////   Future<void> shareScreen() async {//     setState(() {//       _isScreenShared = !_isScreenShared;//     });//     if (_isScreenShared) {//       await agoraEngine.startScreenCapture(//         const ScreenCaptureParameters2(//           captureAudio: true,//           audioParams: ScreenAudioParameters(//             sampleRate: 16000,//             channels: 2,//             captureSignalVolume: 100,//           ),//           captureVideo: true,//           videoParams: ScreenVideoParameters(//             dimensions: VideoDimensions(width: 1920, height: 1080), // 1080p//             frameRate: 30, // 30 fps//             bitrate: 5000, // 5000 Kbps//           ),//         ),//       );//     } else {//       await agoraEngine.stopScreenCapture();//     }////     ChannelMediaOptions options = ChannelMediaOptions(//       publishCameraTrack: !_isScreenShared,//       publishMicrophoneTrack: !_isScreenShared,//       publishScreenTrack: _isScreenShared,//       publishScreenCaptureAudio: _isScreenShared,//       publishScreenCaptureVideo: _isScreenShared,//     );////     agoraEngine.updateChannelMediaOptions(options);//   }////   bool isContainerAInFullPage = true;////   ///this is for draggable view//   bool isMyFullScreen = true;//   IndividualChatController controller = Get.find();////   Future<void> ringDuration() async {//     Future.delayed(Duration(seconds: 30), () async {//       if (_remoteUid == null) {////       } else {////       }//     });//   }////   @override//   void initState() {//     super.initState();//     // Set up an instance of Agora engine//     ringDuration();//     setupVideoSDKEngine();//   }//// // Build UI//   @override//   Widget build(BuildContext context) {//     return MaterialApp(//       debugShowCheckedModeBanner: false,//       scaffoldMessengerKey: scaffoldMessengerKey,//       home: Scaffold(//         backgroundColor: colorBackground,//         body: Stack(//           children: <Widget>[//             SizedBox(//               width: Get.width,//               height: Get.height,//               child: _remoteVideo(),//             ),//             Positioned(//                 bottom: MediaQuery//                     .of(context)//                     .size//                     .width * 0.24,//                 right: 16,//                 child: Container(//                   width: MediaQuery//                       .of(context)//                       .size//                       .width * 0.3,//                   height: MediaQuery//                       .of(context)//                       .size//                       .width * 0.4,//                   padding: const EdgeInsets.all(0.0),//                   decoration: BoxDecoration(//                       borderRadius: BorderRadius.circular(25.0),//                       color: Colors.grey.shade200,//                       border: Border.all(color: Colors.grey.shade200)),//                   child: _isCameraOn//                       ? ClipRRect(//                       borderRadius: BorderRadius.circular(25),//                       child: _localPreview())//                       : Column(//                     mainAxisAlignment: MainAxisAlignment.center,//                     crossAxisAlignment: CrossAxisAlignment.center,//                     children: [//                       Container(//                         height: 60,//                         width: 60,//                         decoration: BoxDecoration(//                             color: Colors.grey.shade300,//                             shape: BoxShape.circle),//                         child: ClipRRect(//                             borderRadius: BorderRadius.circular(100),//                             child: Image.network(//                               userController//                                   .userData()//                                   .profileImage,//                               fit: BoxFit.cover,//                               loadingBuilder: (BuildContext context,//                                   Widget child,//                                   ImageChunkEvent? loadingProgress) {//                                 if (loadingProgress == null) {//                                   return child;//                                 } else {//                                   return ShimmerEffect(//                                     baseColor: Colors.grey.shade300,//                                     highlightColor: Colors.grey.shade100,//                                     child: Container(//                                       width: 60,//                                       height: 60,//                                       decoration: BoxDecoration(//                                           color: Colors.grey.shade200,//                                           borderRadius://                                           BorderRadius.circular(6)),//                                     ),//                                   );//                                 }//                               },//                               errorBuilder: (BuildContext context,//                                   Object error, StackTrace? stackTrace) {//                                 return Container(//                                   width://                                   MediaQuery//                                       .of(context)//                                       .size//                                       .width *//                                       0.35,//                                   height://                                   MediaQuery//                                       .of(context)//                                       .size//                                       .height *//                                       0.2,//                                   decoration: BoxDecoration(//                                       color: Colors.grey.shade200,//                                       borderRadius://                                       BorderRadius.circular(6)),//                                   child: Icon(//                                     Icons.person,//                                     color: Colors.grey,//                                   ),//                                 );//                               },//                             )),//                       ),//                     ],//                   ),//                 )),//             Align(//               alignment: Alignment.topCenter,//               child: Center(//                 child: Container(//                   margin: const EdgeInsets.only(top: 60.0),//                   child: Column(//                     children: <Widget>[//                       if (_callDurationInSeconds > 0)//                         const Text(//                           "Call Duration",//                           style: TextStyle(//                             color: Colors.black,//                             fontSize: 16.0,//                             fontWeight: FontWeight.bold,//                             fontFamily: "Bold",//                           ),//                         ),//                       if (_callDurationInSeconds > 0)//                         Text(//                           formattedCallDuration,//                           style: const TextStyle(//                               color: Colors.black, fontSize: 16.0),//                         ),//                     ],//                   ),//                 ),//               ),//             ),//             Positioned(//               left: 16,//               right: 16,//               bottom: 16,//               child: Padding(//                 padding://                 const EdgeInsets.symmetric(horizontal: 16, vertical: 8),//                 child: Row(//                   mainAxisAlignment: MainAxisAlignment.spaceAround,//                   children: [//                     GestureDetector(//                         onTap: _isJoined//                             ? () {//                           toggleCamera();//                         }//                             : null,//                         child: Card.outlined(//                           shape: RoundedRectangleBorder(//                               borderRadius: BorderRadius.circular(100)),//                           child: CircleAvatar(//                             backgroundColor: Colors.grey,//                             // Set the background color of the CircleAvatar//                             radius: 25.0,//                             // Set the radius of the CircleAvatar//                             child: Center(//                                 child: _isCameraOn//                                     ? Transform.scale(//                                     scale: 0.6,//                                     child: Image.asset(//                                       'assets/agora/video.png',//                                       color: colorWhite,//                                     ))//                                     : Transform.scale(//                                     scale: 0.6,//                                     child: Image.asset(//                                       'assets/agora/videooff.png',//                                       color: colorWhite,//                                     ))),//                           ),//                         )),////                     GestureDetector(//                         onTap: () async {//                           leave();//                           Navigator.pushReplacement(//                               context,//                               MaterialPageRoute(//                                   builder: (_) =>//                                       ConsultantSessionEndScreen(//                                           consultantId: widget.userId),//                                   maintainState: false));//                         },//                         child: Container(//                             height: 72,//                             width: 72,//                             decoration: BoxDecoration(//                                 color: Colors.red, shape: BoxShape.circle),//                             child: Transform.scale(//                                 scale: 0.5,//                                 child: Image.asset(//                                   'assets/agora/caliocns.png',//                                   height: 1,//                                   width: 1,//                                   fit: BoxFit.scaleDown,//                                 )))),////                     ///camera off on//                     GestureDetector(//                         onTap: _isJoined//                             ? () {//                           toggleMute();//                         }//                             : null,//                         child: Card.outlined(//                           shape: RoundedRectangleBorder(//                               borderRadius: BorderRadius.circular(100)),//                           child: CircleAvatar(//                             backgroundColor: Colors.grey,////                             // Set the background color of the CircleAvatar//                             radius: 25.0,//                             // Set the radius of the CircleAvatar//                             child: Center(//                                 child: _isMuted//                                     ? Transform.scale(//                                     scale: 0.5,//                                     child: Image.asset(//                                       'assets/agora/micoff.png',//                                       color: colorWhite,//                                     ))//                                     : Transform.scale(//                                     scale: 0.5,//                                     child: Image.asset(//                                       'assets/agora/mic.png',//                                       color: colorWhite,//                                     ))),//                           ),//                         )),//                   ],//                 ),//               ),//             ),//             Positioned(//                 top: 60,//                 right: 26,//                 child: PopupMenuButton<int>(//                     padding: EdgeInsets.zero,//                     shadowColor: colorWhite,//                     surfaceTintColor: colorWhite,//                     color: colorWhite,//                     shape: RoundedRectangleBorder(//                         borderRadius: BorderRadius.circular(8)),//                     itemBuilder: (context) =>//                     [//                       PopupMenuItem<int>(//                           padding: EdgeInsets.zero,//                           onTap: () async {//                             showModalBottomSheet(//                               context: context,//                               isScrollControlled: true,//                               backgroundColor: Colors.transparent,//                               builder: (BuildContext context) {//                                 return ClipRRect(//                                   borderRadius: const BorderRadius.only(//                                     topLeft: Radius.circular(25.0),//                                     topRight: Radius.circular(25.0),//                                   ),//                                   child: Container(//                                     padding: const EdgeInsets.symmetric(//                                         vertical: 16.0),//                                     constraints: BoxConstraints(//                                         maxHeight: MediaQuery//                                             .of(context)//                                             .size//                                             .height *//                                             0.9),//                                     decoration: const BoxDecoration(//                                       color: Colors.white,//                                       borderRadius: BorderRadius.only(//                                         topLeft: Radius.circular(25.0),//                                         topRight: Radius.circular(25.0),//                                       ),//                                     ),//                                     child: Column(//                                       mainAxisAlignment://                                       MainAxisAlignment.center,//                                       crossAxisAlignment://                                       CrossAxisAlignment.start,//                                       children: <Widget>[//                                         SizedBox(//                                             width: MediaQuery//                                                 .of(context)//                                                 .size//                                                 .width),//                                         Padding(//                                           padding://                                           const EdgeInsets.symmetric(//                                               horizontal: 16.0),//                                           child: Column(//                                             mainAxisAlignment://                                             MainAxisAlignment.start,//                                             crossAxisAlignment://                                             CrossAxisAlignment.start,//                                             children: [//                                               Padding(//                                                 padding: const EdgeInsets//                                                     .symmetric(//                                                     horizontal: 4.0),//                                                 child: Row(//                                                   mainAxisAlignment://                                                   MainAxisAlignment//                                                       .spaceBetween,//                                                   crossAxisAlignment://                                                   CrossAxisAlignment//                                                       .center,//                                                   children: [//                                                     GestureDetector(//                                                       onTap: () {//                                                         Navigator.pop(//                                                             context);//                                                       },//                                                       child: Row(//                                                         mainAxisAlignment://                                                         MainAxisAlignment//                                                             .start,//                                                         crossAxisAlignment://                                                         CrossAxisAlignment//                                                             .center,//                                                         children: [//                                                           Container(//                                                               height: 18,//                                                               width: 18,//                                                               decoration: BoxDecoration(//                                                                   shape: BoxShape//                                                                       .circle,//                                                                   border: Border//                                                                       .all(//                                                                       color: Colors//                                                                           .black,//                                                                       width://                                                                       2)),//                                                               child://                                                               const Center(//                                                                   child://                                                                   Icon(//                                                                     Icons.close,//                                                                     color: Colors//                                                                         .black,//                                                                     size: 14,//                                                                   ))),//                                                           const SizedBox(//                                                             width: 8,//                                                           ),//                                                           const Text(//                                                             "Messages",//                                                             style: TextStyle(//                                                                 fontSize://                                                                 20,//                                                                 fontWeight://                                                                 FontWeight//                                                                     .w800,//                                                                 color: Colors//                                                                     .black,//                                                                 fontFamily://                                                                 "Bold"),//                                                           ),//                                                         ],//                                                       ),//                                                     ),//                                                   ],//                                                 ),//                                               ),//                                               const SizedBox(//                                                 height: 16,//                                               ),//                                             ],//                                           ),//                                         ),//                                         const Divider(//                                           color: Color(0xffE5E5E5),//                                         ),//                                         const SizedBox(//                                           height: 16,//                                         ),//                                         Container(//                                             height: MediaQuery//                                                 .of(context)//                                                 .size//                                                 .height *//                                                 0.69,//                                             child: Column(//                                               children: [//                                                 // ElevatedButton(onPressed: ()async{//                                                 //   String message = await RecordingApis().acquireResourceId(widget.channelId, "855358163");//                                                 //   messageController.addMessage(message);//                                                 // }, child: Text("Acuire ResourceId"),),//                                                 Obx(() {//                                                   return ListView.builder(//                                                     itemCount://                                                     messageController//                                                         .messages//                                                         .length,//                                                     shrinkWrap: true,//                                                     itemBuilder://                                                         (context, index) {//                                                       return ListTile(//                                                         title: Text(//                                                             messageController//                                                                 .messages[//                                                             index]),//                                                       );//                                                     },//                                                   );//                                                 })//                                               ],//                                             )),//                                         Padding(//                                           padding://                                           const EdgeInsets.symmetric(//                                               horizontal: 8.0),//                                           child: Row(//                                             children: [//                                               Expanded(//                                                 child: Container(//                                                   height: 52,//                                                   decoration: BoxDecoration(//                                                       color: Colors//                                                           .grey.shade200,//                                                       borderRadius://                                                       BorderRadius//                                                           .circular(//                                                           26)),//                                                   child: Padding(//                                                     padding://                                                     const EdgeInsets//                                                         .symmetric(//                                                         horizontal://                                                         16.0),//                                                     child: TextFormField(//                                                       controller://                                                       _messageController,//                                                       decoration: InputDecoration(//                                                           enabledBorder://                                                           InputBorder//                                                               .none,//                                                           focusedBorder://                                                           InputBorder//                                                               .none,//                                                           hintText://                                                           "Enter your messsage"),//                                                     ),//                                                   ),//                                                 ),//                                               ),//                                               IconButton(//                                                   onPressed: () {//                                                     _sendMessage(//                                                         _messageController.text//                                                             .trim());//                                                   },//                                                   icon: Icon(//                                                     Icons.done_all,//                                                     color: Colors.blue,//                                                   ))//                                             ],//                                           ),//                                         )//                                       ],//                                     ),//                                   ),//                                 );//                               },//                             );//                           },//                           child: Padding(//                             padding://                             const EdgeInsets.symmetric(horizontal: 8.0),//                             child: Row(//                               children: [//                                 SvgPicture.asset(//                                   'assets/agora/chat.svg',//                                   color: colorBlack,//                                   height: 24,//                                   width: 24,//                                 ),//                                 SizedBox(//                                   width: 16,//                                 ),//                                 Text(//                                   'Message',//                                   textAlign: TextAlign.start,//                                   style: TextStyle(//                                     fontFamily: "Bold",//                                     fontSize: 12,//                                     color: colorBlack,//                                   ),//                                 ),//                               ],//                             ),//                           )),//                       PopupMenuItem<int>(//                           padding: EdgeInsets.zero,//                           onTap: _isJoined//                               ? () => toggleCameraRotation()//                               : null,//                           child: Padding(//                             padding://                             const EdgeInsets.symmetric(horizontal: 8.0),//                             child: Row(//                               children: [//                                 SvgPicture.asset(//                                   'assets/agora/flip.svg',//                                   color: colorBlack,//                                   height: 24,//                                   width: 24,//                                 ),//                                 SizedBox(//                                   width: 16,//                                 ),//                                 Text(//                                   'Camera Flip',//                                   textAlign: TextAlign.start,//                                   style: TextStyle(//                                     fontFamily: "Bold",//                                     fontSize: 12,//                                     color: colorBlack,//                                   ),//                                 ),//                               ],//                             ),//                           )),//                       PopupMenuItem<int>(//                           padding: EdgeInsets.zero,//                           onTap: _isJoined ? () => {shareScreen()} : null,//                           child: Padding(//                             padding://                             const EdgeInsets.symmetric(horizontal: 8.0),//                             child: Row(//                               children: [//                                 SvgPicture.asset(//                                   'assets/agora/share.svg',//                                   color: colorBlack,//                                   height: 24,//                                   width: 24,//                                 ),//                                 SizedBox(//                                   width: 16,//                                 ),//                                 Text(//                                   'Screen Share',//                                   textAlign: TextAlign.start,//                                   style: TextStyle(//                                     fontFamily: "Bold",//                                     fontSize: 12,//                                     color: colorBlack,//                                   ),//                                 ),//                               ],//                             ),//                           )),//                     ],//                     child: Icon(//                       Icons.more_vert,//                       color: colorBlack,//                     )))//           ],//         ),//       ),//     );//   }////   Widget _localPreview() {//     // Display local video or screen sharing preview//     if (_isJoined) {//       if (!_isScreenShared) {//         return AgoraVideoView(//           controller: VideoViewController(//             rtcEngine: agoraEngine,//             canvas: const VideoCanvas(uid: 0),//           ),//         );//       } else {//         if (_isCameraOn) {//           return AgoraVideoView(//               controller: VideoViewController(//                 rtcEngine: agoraEngine,//                 canvas: const VideoCanvas(//                   cropArea: Rectangle(x: 200, y: 200),//                   uid: 0,//                   sourceType: VideoSourceType.videoSourceScreen,//                 ),//               ));//         } else {//           return Column(//             mainAxisAlignment: MainAxisAlignment.center,//             crossAxisAlignment: CrossAxisAlignment.center,//             children: [//               Container(//                 height: 120,//                 width: 120,//                 decoration: BoxDecoration(//                     color: Colors.grey.shade300, shape: BoxShape.circle),//                 child: ClipRRect(//                     borderRadius: BorderRadius.circular(100),//                     child: Image.network(//                       widget.imageUrl,//                       fit: BoxFit.cover,//                       loadingBuilder: (BuildContext context, Widget child,//                           ImageChunkEvent? loadingProgress) {//                         if (loadingProgress == null) {//                           return child;//                         } else {//                           return ShimmerEffect(//                             baseColor: Colors.grey.shade300,//                             highlightColor: Colors.grey.shade100,//                             child: Container(//                               width: 120,//                               height: 120,//                               decoration: BoxDecoration(//                                   color: Colors.grey.shade200,//                                   borderRadius: BorderRadius.circular(6)),//                             ),//                           );//                         }//                       },//                       errorBuilder: (BuildContext context, Object error,//                           StackTrace? stackTrace) {//                         return Container(//                           width: MediaQuery//                               .of(context)//                               .size//                               .width * 0.35,//                           height: MediaQuery//                               .of(context)//                               .size//                               .height * 0.2,//                           decoration: BoxDecoration(//                               color: Colors.grey.shade200,//                               borderRadius: BorderRadius.circular(6)),//                           child: Icon(//                             Icons.person,//                             color: Colors.grey,//                           ),//                         );//                       },//                     )),//               ),//               SizedBox(//                 height: 8,//               ),//               Text(//                 widget.fname,//                 style: TextStyle(//                   fontSize: 15,//                   fontWeight: FontWeight.w800,//                   fontFamily: "SemiBold",//                   color: colorBlack,//                 ),//               )//             ],//           );//         }//       }//     } else {//       return SizedBox();//     }//   }////   void toggleMute() {//     setState(() {//       _isMuted = !_isMuted;//     });//     agoraEngine.muteLocalAudioStream(_isMuted);//   }////   // Send a chat message//   Future<void> sendMessage(String message) async {//     Uint8List messageBytes = Uint8List.fromList(message.codeUnits);//     int length = messageBytes.length;//     await agoraEngine.sendStreamMessage(//         streamId: _streamId, data: messageBytes, length: length);//   }////   void toggleCamera() {//     setState(() {//       _isCameraOn = !_isCameraOn;//     });////     if (_isCameraOn) {//       agoraEngine.enableVideo();//     } else {//       agoraEngine.disableVideo();//     }//   }////   void toggleCameraRotation() {//     setState(() {//       _isFrontCamera = !_isFrontCamera;//     });////     agoraEngine.switchCamera();//   }//// // Display remote user's video//   Widget _remoteVideo() {//     bool isRemoteUserMuted = remoteUserMuteStates[_remoteUid] ?? false;//     bool isRemoteUserVideoMuted =//         remoteUserMuteVideoStates[_remoteUid] ?? false;//     if (_remoteUid != null) {//       return GestureDetector(//         onTap: () {//           setState(() {//             isMyFullScreen = !isMyFullScreen;//           });//         },//         child: Stack(//           children: [//             isRemoteUserVideoMuted//                 ? Center(//                 child: Column(//                   mainAxisAlignment: MainAxisAlignment.center,//                   crossAxisAlignment: CrossAxisAlignment.center,//                   children: [//                     Container(//                       height: 120,//                       width: 120,//                       decoration: BoxDecoration(//                           color: Colors.grey.shade300,//                           shape: BoxShape.circle),//                       child: ClipRRect(//                           borderRadius: BorderRadius.circular(100),//                           child: Image.network(//                             widget.imageUrl,//                             fit: BoxFit.cover,//                             loadingBuilder: (BuildContext context,//                                 Widget child,//                                 ImageChunkEvent? loadingProgress) {//                               if (loadingProgress == null) {//                                 return child;//                               } else {//                                 return ShimmerEffect(//                                   baseColor: Colors.grey.shade300,//                                   highlightColor: Colors.grey.shade100,//                                   child: Container(//                                     width: 120,//                                     height: 120,//                                     decoration: BoxDecoration(//                                         color: Colors.grey.shade200,//                                         borderRadius://                                         BorderRadius.circular(6)),//                                   ),//                                 );//                               }//                             },//                             errorBuilder: (BuildContext context, Object error,//                                 StackTrace? stackTrace) {//                               return Container(//                                 width://                                 MediaQuery//                                     .of(context)//                                     .size//                                     .width * 0.35,//                                 height://                                 MediaQuery//                                     .of(context)//                                     .size//                                     .height * 0.2,//                                 decoration: BoxDecoration(//                                     color: Colors.grey.shade200,//                                     borderRadius: BorderRadius.circular(6)),//                                 child: Icon(//                                   Icons.person,//                                   color: Colors.grey,//                                 ),//                               );//                             },//                           )),//                     ),//                     SizedBox(//                       height: 8,//                     ),//                     Text(//                       widget.fname,//                       style: TextStyle(//                         fontSize: 15,//                         fontWeight: FontWeight.w800,//                         fontFamily: "SemiBold",//                         color: colorBlack,//                       ),//                     )//                   ],//                 ))//                 : AgoraVideoView(//               controller: VideoViewController.remote(//                 rtcEngine: agoraEngine,//                 canvas: VideoCanvas(//                   uid: _remoteUid,//                   mirrorMode: VideoMirrorModeType.videoMirrorModeDisabled,//                 ),//                 connection: RtcConnection(channelId: widget.channelId),//               ),//             ),//             if (isRemoteUserMuted)//               const Align(//                 child: Icon(Icons.mic_off, color: Colors.red, size: 24.0),//               ),//           ],//         ),//       );//     } else {//       return Center(//           child: Column(//             mainAxisSize: MainAxisSize.min,//             crossAxisAlignment: CrossAxisAlignment.center,//             mainAxisAlignment: MainAxisAlignment.center,//             children: [//               SizedBox(//                 height: 60,//               ),//               Container(//                 height: MediaQuery//                     .of(context)//                     .size//                     .width * 0.4,//                 width: MediaQuery//                     .of(context)//                     .size//                     .width * 0.4,//                 decoration: BoxDecoration(//                     color: Colors.grey.shade200, shape: BoxShape.circle),//                 child: ClipRRect(//                   borderRadius: BorderRadius.circular(1000),////                   ///Replace this this remote users image//                   child: Image.network(//                     widget.imageUrl,//                     height: MediaQuery//                         .of(context)//                         .size//                         .width * 0.4,//                     width: MediaQuery//                         .of(context)//                         .size//                         .width * 0.4,//                     fit: BoxFit.cover,//                     errorBuilder: (BuildContext context, Object exception,//                         StackTrace? stackTrace) {//                       return Container(//                         height: MediaQuery//                             .of(context)//                             .size//                             .width * 0.4,//                         width: MediaQuery//                             .of(context)//                             .size//                             .width * 0.4,//                         color: Colors.grey.shade200,//                         // Background color for error//                         child: Icon(Icons.error,//                             color: colorOrange, size: 36), // Error icon//                       );//                     },//                   ),//                 ),//               ),//               SizedBox(//                 height: 16,//               ),//               Text(//                 widget.fname,//                 style: TextStyle(//                     color: Colors.black,//                     fontSize: 16,//                     fontFamily: "Bold",//                     fontWeight: FontWeight.w500),//               ),//               SizedBox(//                 height: MediaQuery//                     .of(context)//                     .size//                     .height * 0.2,//               ),//               Text(//                 "Calling...",//                 style: TextStyle(//                   color: Colors.black,//                   fontSize: 14,//                   fontFamily: "Bold",//                 ),//               ),//               Expanded(//                 child: SizedBox(//                   height: 16,//                 ),//               ),//             ],//           ));//     }//   }////   Future<void> setupVideoSDKEngine() async {//     try {//       // Request necessary permissions//       final permissions =//       await [Permission.microphone, Permission.camera].request();////       if (permissions[Permission.microphone] != PermissionStatus.granted ||//           permissions[Permission.camera] != PermissionStatus.granted) {//         Future.delayed(Duration(seconds: 2), () {//           Get.off(BottomNavScreen(currentTab: 0));//         });//       }//       // Create an instance of the Agora engine//       agoraEngine = createAgoraRtcEngine();//       // Initialize the Agora engine with your app ID and channel profile//       await agoraEngine.initialize(const RtcEngineContext(//         appId: Constant.agoraAppId,//         channelProfile: ChannelProfileType.channelProfileCommunication,//       ));////       // Set the video encoder configuration//       await agoraEngine.setVideoEncoderConfiguration(//         const VideoEncoderConfiguration(//           dimensions: VideoDimensions(width: 1280, height: 720), // 720p resolution//           frameRate: 30, // 30 fps for smooth video//           bitrate: 2500, // 2500 Kbps for good quality at 720p//         ),//       );////       // Enable audio and video//       await agoraEngine.enableAudio();//       await agoraEngine.enableVideo();////       // Set the channel profile to live broadcasting and the client role to broadcaster//       await agoraEngine//           .setChannelProfile(ChannelProfileType.channelProfileLiveBroadcasting);//       await agoraEngine.setClientRole(//           role: ClientRoleType.clientRoleBroadcaster);////       // Start the local video preview//       await agoraEngine.startPreview(//           sourceType: VideoSourceType.videoSourceCamera);////       // Register the event handler//       agoraEngine.registerEventHandler(//         RtcEngineEventHandler(//           onJoinChannelSuccess: (RtcConnection connection, int elapsed) {//             showMessage(//                 "Local user uid:${connection.localUid} joined the channel");//             setState(() {//               _isJoined = true;//             });//           },//           onUserJoined://               (RtcConnection connection, int remoteUid, int elapsed) async {//             setState(() {//               isccallstart = true;//               _remoteUid = remoteUid;//               _remoteUids.add(remoteUid);//               _callDurationTimer =//                   Timer.periodic(const Duration(seconds: 1), (timer) {//                     setState(() {//                       _callDurationInSeconds++;//                     });//                   });//             });//             // if(widget.isLive){//             //   sendMessage(controller.liveCallId.value);//             // }//             // if(widget.isLive){//             //   showMessage('Live Call');//             //   String endTime = await liveScreenApis.getEndTime(//             //       liveScreenApis.startTime.value,//             //       Duration(minutes: int.parse(widget.appointmentDuration)));//             //   final response = await liveScreenApis.createAppointment(//             //     widget.consultantId,//             //     widget.userId,//             //     widget.appointmentId,//             //     widget.appointmentDate,//             //     liveScreenApis.startTime.value,//             //     endTime,//             //     widget.agoratoken,//             //     widget.channelId,//             //   );////             // }else{//             //   showMessage('Not a live Call');//             // }//           },//           onUserOffline: (RtcConnection connection, int remoteUid,//               UserOfflineReasonType reason) {//             showMessage("Remote user uid:$remoteUid left the channel");//             setState(() {//               _remoteUid = null;//               _remoteUids.remove(remoteUid);//               if (_remoteUids.isEmpty) {//                 _callDurationTimer.cancel();//                 _isCalldisconnet = false;//                 _callDurationTimer.cancel();//                 leave();//                 Navigator.pushReplacement(//                     context,//                     MaterialPageRoute(//                         builder: (_) =>//                             ConsultantSessionEndScreen(//                                 consultantId: widget.userId),//                         maintainState: false));//               }//             });//           },//           onUserMuteAudio://               (RtcConnection connection, int remoteUid, bool muted) {//             setState(() {//               remoteUserMuteStates[remoteUid] = muted; // True if muted//             });//           },//           onUserMuteVideo://               (RtcConnection connection, int remoteUid, bool muted) {//             setState(() {//               remoteUserMuteVideoStates[remoteUid] = muted; // True if muted//             });//           },//           onVideoSizeChanged: (RtcConnection connection,//               VideoSourceType sourceType,//               int uid,//               int width,//               int height,//               int rotation) {//             print("SHARING ONNNNNNNN\n\n");//             print(sourceType);//             print("SHARING ONNNNNNNN\n\n");//           },//           onRemoteVideoStateChanged: (RtcConnection connection,//               int remoteUid,//               RemoteVideoState state,//               RemoteVideoStateReason reason,//               int elapsed) {},//           onStreamMessage: (RtcConnection connection, int remoteUid,//               int streamId, Uint8List data, int length, int sentTs) {//             String message = String.fromCharCodes(data);//             print("Received message: $message from user: $remoteUid");//             showMessage("Received message: $message from user: $remoteUid");//             setState(() {//               messageController.messages.add("User $remoteUid: $message");//             });//           },//         ),//       );////       // Join the channel//       join();//       // Asynchronous operation to create data stream//       final streamId = await agoraEngine.createDataStream(//           DataStreamConfig(ordered: true, syncWithAudio: true));////       // Update the state with the result//       setState(() {//         _streamId = streamId;//       });////       // Show message after state update//       showMessage(_streamId.toString());//     } catch (e) {//       debugPrint("Error in setupVideoSDKEngine: $e");//     }//   }//////   void join() async {//     print("AGORA TOKEN  ${widget.channelId}");//     print(widget.agoratoken);//     await agoraEngine.startPreview();////     // Set channel options including the client role and channel profile//     ChannelMediaOptions options = const ChannelMediaOptions(//       clientRoleType: ClientRoleType.clientRoleBroadcaster,//       channelProfile: ChannelProfileType.channelProfileCommunication,//     );////     await agoraEngine.joinChannel(//       token: widget.agoratoken,//       channelId: widget.channelId,//       options: options,//       uid: uid,//     );//   }////   void leave() async {//     setState(() {//       _isJoined = false;//       _remoteUid = null;//       _remoteUids.clear();//     });//     if (_remoteUid != null) {//       _callDurationTimer.cancel();//     }//     // Leave the Agora channel and release resources//     await agoraEngine.leaveChannel();//     agoraEngine.release();//     // Clean up any GetX controllers if applicable//     if (Get.isRegistered<IndividualChatController>()) {//       Get.delete<IndividualChatController>();//     }//     Navigator.pushReplacement(//         context,//         MaterialPageRoute(//             builder: (_) =>//                 ConsultantSessionEndScreen(consultantId: widget.userId),//             maintainState: false));//   }////   // Release the resources when you leave//   @override//   void dispose() async {//     // Cancel the timer to avoid memory leaks//     _callDurationTimer.cancel();//     // Leave the Agora channel and release resources//     await agoraEngine.leaveChannel();//     agoraEngine.release();//     // Clean up any GetX controllers if applicable//     if (Get.isRegistered<IndividualChatController>()) {//       Get.delete<IndividualChatController>();//     }//     // Any other custom resource cleanup//     super.dispose();//   }//// }